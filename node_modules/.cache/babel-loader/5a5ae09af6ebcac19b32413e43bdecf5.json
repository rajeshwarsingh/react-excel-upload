{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshwarsingh/www/rajan/react/my-app/src/components/upload.js\";\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport SpreadsheetComponent from 'react-spreadsheet-component';\nimport csv from 'csvtojson';\nexport default function MyDropzone(props) {\n  let finalArray = [];\n  const onDrop = useCallback(acceptedFiles => {\n    let fr = new FileReader();\n\n    fr.onload = function () {\n      const res = fr.result;\n      csv().fromString(res).subscribe(csvLine => {\n        console.log('csvLine**', csvLine);\n        finalArray.push(csvLine);\n      }).on('done', error => {\n        console.log(\"finalArray******\", finalArray);\n      });\n    };\n\n    fr.readAsText(acceptedFiles[0]); // // Do something with the files\n    // console.log(\"*****\",acceptedFiles)\n    // props.getFileData(acceptedFiles)\n  }, []);\n\n  const _useDropzone = useDropzone({\n    onDrop\n  }),\n        getRootProps = _useDropzone.getRootProps,\n        getInputProps = _useDropzone.getInputProps,\n        isDragActive = _useDropzone.isDragActive;\n\n  return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), isDragActive ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Drop the files here ...\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Drag 'n' drop some files here, or click to select files\"));\n}","map":{"version":3,"sources":["/Users/rajeshwarsingh/www/rajan/react/my-app/src/components/upload.js"],"names":["React","useCallback","useDropzone","SpreadsheetComponent","csv","MyDropzone","props","finalArray","onDrop","acceptedFiles","fr","FileReader","onload","res","result","fromString","subscribe","csvLine","console","log","push","on","error","readAsText","getRootProps","getInputProps","isDragActive"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,oBAAP,MAAiC,6BAAjC;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxC,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMC,MAAM,GAAGP,WAAW,CAACQ,aAAa,IAAI;AAC1C,QAAIC,EAAE,GAAG,IAAIC,UAAJ,EAAT;;AACAD,IAAAA,EAAE,CAACE,MAAH,GAAa,YAAU;AACrB,YAAMC,GAAG,GAAGH,EAAE,CAACI,MAAf;AACAV,MAAAA,GAAG,GACFW,UADD,CACYF,GADZ,EAECG,SAFD,CAEYC,OAAD,IAAW;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,OAAxB;AACFV,QAAAA,UAAU,CAACa,IAAX,CAAgBH,OAAhB;AACC,OALD,EAMCI,EAND,CAMI,MANJ,EAMYC,KAAD,IAAS;AAElBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BZ,UAA/B;AAED,OAVD;AAWD,KAbD;;AAeAG,IAAAA,EAAE,CAACa,UAAH,CAAcd,aAAa,CAAC,CAAD,CAA3B,EAjB0C,CAqB1C;AACA;AACA;AACD,GAxByB,EAwBvB,EAxBuB,CAA1B;;AAFwC,uBA2BYP,WAAW,CAAC;AAACM,IAAAA;AAAD,GAAD,CA3BvB;AAAA,QA2BjCgB,YA3BiC,gBA2BjCA,YA3BiC;AAAA,QA2BnBC,aA3BmB,gBA2BnBA,aA3BmB;AAAA,QA2BJC,YA3BI,gBA2BJA,YA3BI;;AA6BxC,SACE,6CAASF,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAGIC,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADU,GAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DALN,CADF;AAUD","sourcesContent":["import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport SpreadsheetComponent from 'react-spreadsheet-component'\nimport csv from 'csvtojson'\n\nexport default function MyDropzone(props) {\n  let finalArray = []\n  const onDrop = useCallback(acceptedFiles => {\n    let fr = new FileReader();\n    fr.onload  = function(){\n      const res = fr.result;\n      csv()\n      .fromString(res)\n      .subscribe((csvLine)=>{\n        console.log('csvLine**',csvLine)\n      finalArray.push(csvLine);\n      })\n      .on('done',(error)=>{\n\n        console.log(\"finalArray******\",finalArray)\n\n      })\n    }\n\n    fr.readAsText(acceptedFiles[0])\n\n\n\n    // // Do something with the files\n    // console.log(\"*****\",acceptedFiles)\n    // props.getFileData(acceptedFiles)\n  }, [])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      {\n        isDragActive ?\n          <p>Drop the files here ...</p> :\n          <p>Drag 'n' drop some files here, or click to select files</p>\n      }\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}