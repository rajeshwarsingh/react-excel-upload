{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshwarsingh/www/rajan/react/my-app/src/components/upload.js\";\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport SpreadsheetComponent from 'react-spreadsheet-component';\nimport csv from 'csvtojson';\nexport default function MyDropzone(props) {\n  const onDrop = useCallback(csvFile => {\n    let fileJSONArray = [];\n    const fr = new FileReader();\n\n    fr.onload = function () {\n      const res = fr.result;\n      csv().fromString(res).subscribe(csvLine => {\n        fileJSONArray.push(csvLine);\n      }).on('done', error => {\n        // NOTE: A callback to FileUploader Component to send CSV-JSON transformed Data\n        callback(fileJSONArray);\n      });\n    };\n\n    fr.readAsText(csvFile); // // Do something with the files\n    // console.log(\"*****\",acceptedFiles)\n    // props.getFileData(acceptedFiles)\n  }, []);\n\n  const _useDropzone = useDropzone({\n    onDrop\n  }),\n        getRootProps = _useDropzone.getRootProps,\n        getInputProps = _useDropzone.getInputProps,\n        isDragActive = _useDropzone.isDragActive;\n\n  return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), isDragActive ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Drop the files here ...\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Drag 'n' drop some files here, or click to select files\"));\n}","map":{"version":3,"sources":["/Users/rajeshwarsingh/www/rajan/react/my-app/src/components/upload.js"],"names":["React","useCallback","useDropzone","SpreadsheetComponent","csv","MyDropzone","props","onDrop","csvFile","fileJSONArray","fr","FileReader","onload","res","result","fromString","subscribe","csvLine","push","on","error","callback","readAsText","getRootProps","getInputProps","isDragActive"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,oBAAP,MAAiC,6BAAjC;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAExC,QAAMC,MAAM,GAAGN,WAAW,CAACO,OAAO,IAAI;AACpC,QAAIC,aAAa,GAAG,EAApB;AACA,UAAMC,EAAE,GAAG,IAAIC,UAAJ,EAAX;;AACDD,IAAAA,EAAE,CAACE,MAAH,GAAY,YAAY;AACtB,YAAMC,GAAG,GAAGH,EAAE,CAACI,MAAf;AACAV,MAAAA,GAAG,GAAGW,UAAN,CAAiBF,GAAjB,EACCG,SADD,CACYC,OAAD,IAAa;AACtBR,QAAAA,aAAa,CAACS,IAAd,CAAmBD,OAAnB;AACD,OAHD,EAICE,EAJD,CAII,MAJJ,EAIaC,KAAD,IAAW;AACrB;AACAC,QAAAA,QAAQ,CAACZ,aAAD,CAAR;AACD,OAPD;AAQD,KAVD;;AAWAC,IAAAA,EAAE,CAACY,UAAH,CAAcd,OAAd,EAdqC,CAgBrC;AACC;AACA;AACD,GAnByB,EAmBvB,EAnBuB,CAA1B;;AAFwC,uBAsBYN,WAAW,CAAC;AAACK,IAAAA;AAAD,GAAD,CAtBvB;AAAA,QAsBjCgB,YAtBiC,gBAsBjCA,YAtBiC;AAAA,QAsBnBC,aAtBmB,gBAsBnBA,aAtBmB;AAAA,QAsBJC,YAtBI,gBAsBJA,YAtBI;;AAwBxC,SACE,6CAASF,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAGIC,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADU,GAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DALN,CADF;AAUD","sourcesContent":["import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport SpreadsheetComponent from 'react-spreadsheet-component'\nimport csv from 'csvtojson'\n\nexport default function MyDropzone(props) {\n\n  const onDrop = useCallback(csvFile => {\n    let fileJSONArray = []\n    const fr = new FileReader();\n   fr.onload = function () {\n     const res = fr.result;\n     csv().fromString(res)\n     .subscribe((csvLine) => {\n       fileJSONArray.push(csvLine);\n     })\n     .on('done', (error) => {\n       // NOTE: A callback to FileUploader Component to send CSV-JSON transformed Data\n       callback(fileJSONArray);\n     });\n   };\n   fr.readAsText(csvFile);\n\n   // // Do something with the files\n    // console.log(\"*****\",acceptedFiles)\n    // props.getFileData(acceptedFiles)\n  }, [])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      {\n        isDragActive ?\n          <p>Drop the files here ...</p> :\n          <p>Drag 'n' drop some files here, or click to select files</p>\n      }\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}