{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _cell = require('./cell');\n\nvar _cell2 = _interopRequireDefault(_cell);\n\nvar _helpers = require('./helpers');\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RowComponent = function (_Component) {\n  _inherits(RowComponent, _Component);\n\n  function RowComponent() {\n    _classCallCheck(this, RowComponent);\n\n    return _possibleConstructorReturn(this, (RowComponent.__proto__ || Object.getPrototypeOf(RowComponent)).apply(this, arguments));\n  }\n\n  _createClass(RowComponent, [{\n    key: 'render',\n\n    /**\r\n     * React Render method\r\n     * @return {[JSX]} [JSX to render]\r\n     */\n    value: function render() {\n      var config = this.props.config,\n          cells = this.props.cells,\n          columns = [],\n          key,\n          uid,\n          selected,\n          cellClasses,\n          i;\n\n      if (!config.columns || cells.length === 0) {\n        return console.error('Table can\\'t be initialized without set number of columsn and no data!');\n      }\n\n      for (i = 0; i < cells.length; i = i + 1) {\n        // If a cell is selected, check if it's this one\n        selected = _helpers2.default.equalCells(this.props.selected, [this.props.uid, i]);\n        cellClasses = this.props.cellClasses && this.props.cellClasses[i] ? this.props.cellClasses[i] : '';\n        key = 'row_' + this.props.uid + '_cell_' + i;\n        uid = [this.props.uid, i];\n        columns.push(_react2.default.createElement(_cell2.default, {\n          key: key,\n          uid: uid,\n          value: cells[i],\n          config: config,\n          cellClasses: cellClasses,\n          onCellValueChange: this.props.onCellValueChange,\n          handleSelectCell: this.props.handleSelectCell,\n          handleDoubleClickOnCell: this.props.handleDoubleClickOnCell,\n          handleCellBlur: this.props.handleCellBlur,\n          spreadsheetId: this.props.spreadsheetId,\n          selected: selected,\n          editing: this.props.editing\n        }));\n      }\n\n      return _react2.default.createElement(\"tr\", null, columns);\n    }\n  }]);\n\n  return RowComponent;\n}(_react.Component);\n\nmodule.exports = RowComponent;","map":null,"metadata":{},"sourceType":"script"}