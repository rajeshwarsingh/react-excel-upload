{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshwarsingh/www/rajan/react/my-app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Upload from './components/upload';\nimport SpreadsheetComponent from 'react-spreadsheet-component';\nvar config = {\n  // Initial number of row\n  rows: 5,\n  // Initial number of columns\n  columns: 8,\n  // True if the first column in each row is a header (th)\n  hasHeadColumn: true,\n  // True if the data for the first column is just a string.\n  // Set to false if you want to pass custom DOM elements.\n  isHeadColumnString: true,\n  // True if the first row is a header (th)\n  hasHeadRow: true,\n  // True if the data for the cells in the first row contains strings.\n  // Set to false if you want to pass custom DOM elements.\n  isHeadRowString: true,\n  // True if the user can add rows (by navigating down from the last row)\n  canAddRow: true,\n  // True if the user can add columns (by navigating right from the last column)\n  canAddColumn: true,\n  // Override the display value for an empty cell\n  emptyValueSymbol: '-',\n  // Fills the first column with index numbers (1...n) and the first row with index letters (A...ZZZ)\n  hasLetterNumberHeads: true\n};\nvar data = {\n  rows: [['Key', 'AAA', 'BBB', 'CCC', 'DDD', 'EEE', 'FFF', 'GGG'], ['COM', '0,0', '0,1', '0,2', '0,3', '0,4', '0,5', '0,6'], ['DIV', '1,0', '1,1', '1,2', '1,3', '1,4', '1,5', '1,6'], ['DEV', '2,0', '2,1', '2,2', '2,3', '2,4', '2,5', '2,6'], ['ACC', '3,0', '3,1', '3,2', '3,3', '3,4', '3,5', '3,6']]\n};\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Upload, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Upload\"), React.createElement(SpreadsheetComponent, {\n    initialData: initialData,\n    config: config,\n    spreadsheetId: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rajeshwarsingh/www/rajan/react/my-app/src/App.js"],"names":["React","Upload","SpreadsheetComponent","config","rows","columns","hasHeadColumn","isHeadColumnString","hasHeadRow","isHeadRowString","canAddRow","canAddColumn","emptyValueSymbol","hasLetterNumberHeads","data","App","initialData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,oBAAP,MAAkC,6BAAlC;AAEA,IAAIC,MAAM,GAAG;AACT;AACAC,EAAAA,IAAI,EAAE,CAFG;AAGT;AACAC,EAAAA,OAAO,EAAE,CAJA;AAKT;AACAC,EAAAA,aAAa,EAAE,IANN;AAOT;AACA;AACAC,EAAAA,kBAAkB,EAAE,IATX;AAUT;AACAC,EAAAA,UAAU,EAAE,IAXH;AAYT;AACA;AACAC,EAAAA,eAAe,EAAE,IAdR;AAeT;AACAC,EAAAA,SAAS,EAAE,IAhBF;AAiBT;AACAC,EAAAA,YAAY,EAAE,IAlBL;AAmBT;AACAC,EAAAA,gBAAgB,EAAE,GApBT;AAqBT;AACAC,EAAAA,oBAAoB,EAAE;AAtBb,CAAb;AAyBA,IAAIC,IAAI,GAAG;AACPV,EAAAA,IAAI,EAAE,CACF,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CADE,EAEF,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CAFE,EAGF,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CAHE,EAIF,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CAJE,EAKF,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CALE;AADC,CAAX;;AAUA,SAASW,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,oBAAD;AAAsB,IAAA,WAAW,EAAEC,WAAnC;AAAgD,IAAA,MAAM,EAAEb,MAAxD;AAAgE,IAAA,aAAa,EAAC,GAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeY,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Upload from './components/upload'\nimport SpreadsheetComponent  from 'react-spreadsheet-component'\n\nvar config = {\n    // Initial number of row\n    rows: 5,\n    // Initial number of columns\n    columns: 8,\n    // True if the first column in each row is a header (th)\n    hasHeadColumn: true,\n    // True if the data for the first column is just a string.\n    // Set to false if you want to pass custom DOM elements.\n    isHeadColumnString: true,\n    // True if the first row is a header (th)\n    hasHeadRow: true,\n    // True if the data for the cells in the first row contains strings.\n    // Set to false if you want to pass custom DOM elements.\n    isHeadRowString: true,\n    // True if the user can add rows (by navigating down from the last row)\n    canAddRow: true,\n    // True if the user can add columns (by navigating right from the last column)\n    canAddColumn: true,\n    // Override the display value for an empty cell\n    emptyValueSymbol: '-',\n    // Fills the first column with index numbers (1...n) and the first row with index letters (A...ZZZ)\n    hasLetterNumberHeads: true\n};\n\nvar data = {\n    rows: [\n        ['Key', 'AAA', 'BBB', 'CCC', 'DDD', 'EEE', 'FFF', 'GGG'],\n        ['COM', '0,0', '0,1', '0,2', '0,3', '0,4', '0,5', '0,6'],\n        ['DIV', '1,0', '1,1', '1,2', '1,3', '1,4', '1,5', '1,6'],\n        ['DEV', '2,0', '2,1', '2,2', '2,3', '2,4', '2,5', '2,6'],\n        ['ACC', '3,0', '3,1', '3,2', '3,3', '3,4', '3,5', '3,6']\n    ]\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Upload>Upload</Upload>\n      <SpreadsheetComponent initialData={initialData} config={config} spreadsheetId=\"1\" />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}