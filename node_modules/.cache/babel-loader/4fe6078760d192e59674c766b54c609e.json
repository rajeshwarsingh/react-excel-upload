{"ast":null,"code":"'use strict';\n\nvar Mousetrap = require('mousetrap');\n\nvar $ = require('jquery');\n\nvar dispatcher = {\n  // Event Pub/Sub System\n  // \n  // Topics used:\n  // [headCellClicked] - A head cell was clicked\n  //      @return {array} [row, column]\n  // [cellSelected] - A cell was selected\n  //      @return {array} [row, column]\n  // [cellBlur] - A cell was blurred\n  //      @return {array} [row, column]\n  // [cellValueChanged] - A cell value changed.\n  //      @return {cell, newValue} Origin cell, new value entered\n  // [dataChanged] - Data changed\n  //      @return {data} New data\n  // [editStarted] - The user started editing\n  //      @return {cell} Origin cell\n  // [editStopped] - The user stopped editing\n  //      @return {cell} Origin cell\n  // [rowCreated] - The user created a row\n  //      @return {number} Row index\n  // [columnCreated] - The user created a column\n  //      @return {number} Column index\n  topics: {},\n\n  /**\r\n   * Subscribe to an event\r\n   * @param  {string} topic         [The topic subscribing to]\r\n   * @param  {function} listener    [The callback for published events]\r\n   * @param  {string} spreadsheetId [The reactId (data-spreadsheetId) of the origin element]\r\n   */\n  subscribe: function subscribe(topic, listener, spreadsheetId) {\n    if (!this.topics[spreadsheetId]) {\n      this.topics[spreadsheetId] = [];\n    }\n\n    if (!this.topics[spreadsheetId][topic]) {\n      this.topics[spreadsheetId][topic] = [];\n    }\n\n    this.topics[spreadsheetId][topic].push(listener);\n  },\n\n  /**\r\n   * Publish to an event channel\r\n   * @param  {string} topic         [The topic publishing to]\r\n   * @param  {object} data          [An object passed to the subscribed callbacks]\r\n   * @param  {string} spreadsheetId [The reactId (data-spreadsheetId) of the origin element]\r\n   */\n  publish: function publish(topic, data, spreadsheetId) {\n    // return if the topic doesn't exist, or there are no listeners\n    if (!this.topics[spreadsheetId] || !this.topics[spreadsheetId][topic] || this.topics[spreadsheetId][topic].length < 1) {\n      return;\n    }\n\n    this.topics[spreadsheetId][topic].forEach(function (listener) {\n      listener(data || {});\n    });\n  },\n  keyboardShortcuts: [// Name, Keys, Events\n  ['down', 'down', ['keyup']], ['up', 'up', ['keyup']], ['left', 'left', ['keyup']], ['right', 'right', ['keyup']], ['tab', 'tab', ['keyup', 'keydown']], ['enter', 'enter', ['keyup']], ['esc', 'esc', ['keyup']], ['remove', ['backspace', 'delete'], ['keyup', 'keydown']], ['letter', ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'x', 'w', 'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '=', '.', ',', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'X', 'W', 'Y', 'Z'], ['keyup', 'keydown']]],\n\n  /**\r\n   * Initializes the keyboard bindings\r\n   * @param {object} domNode [The DOM node of the element that should be bound]\r\n   * @param {string} spreadsheetId [The id of the spreadsheet element]\r\n   */\n  setupKeyboardShortcuts: function setupKeyboardShortcuts(domNode, spreadsheetId) {\n    var self = this;\n    this.keyboardShortcuts.map(function (shortcut) {\n      var shortcutName = shortcut[0],\n          shortcutKey = shortcut[1],\n          events = shortcut[2];\n      events.map(function (event) {\n        Mousetrap(domNode).bind(shortcutKey, function (e) {\n          self.publish(shortcutName + '_' + event, e, spreadsheetId);\n        }, event);\n      });\n    }); // Avoid scroll\n\n    window.addEventListener('keydown', function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1 && $(document.activeElement)[0].tagName !== 'INPUT') {\n        if (e.preventDefault) {\n          e.preventDefault();\n        } else {\n          // Oh, old IE, you ðŸ’©\n          e.returnValue = false;\n        }\n      }\n    }, false);\n  }\n};\nmodule.exports = dispatcher;","map":null,"metadata":{},"sourceType":"script"}