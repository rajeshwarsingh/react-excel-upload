{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshwarsingh/www/rajan/react/my-app/src/App.js\";\nimport React, { useCallback } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Upload from './components/upload';\nimport SpreadsheetComponent from 'react-spreadsheet-component';\nvar config = {\n  // // Initial number of row\n  rows: 5,\n  // // Initial number of columns\n  columns: 8,\n  // // True if the first column in each row is a header (th)\n  // hasHeadColumn: true,\n  // // True if the data for the first column is just a string.\n  // // Set to false if you want to pass custom DOM elements.\n  // isHeadColumnString: true,\n  // // True if the first row is a header (th)\n  // hasHeadRow: true,\n  // // True if the data for the cells in the first row contains strings.\n  // // Set to false if you want to pass custom DOM elements.\n  // isHeadRowString: true,\n  // // True if the user can add rows (by navigating down from the last row)\n  canAddRow: false,\n  // // True if the user can add columns (by navigating right from the last column)\n  // canAddColumn: true,\n  // // Override the display value for an empty cell\n  emptyValueSymbol: '*' // // Fills the first column with index numbers (1...n) and the first row with index letters (A...ZZZ)\n  // hasLetterNumberHeads: true\n\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Don't do this!\n\n    this.getFileData = data => {\n      console.log('df', data);\n      this.setState({\n        rows: data\n      });\n    };\n\n    this.Rows = data => {\n      return data.map((rowItem, i) => {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, this.Columns());\n      });\n    };\n\n    this.Columns = row => {\n      return Object.keys(row).map((tdItem, index) => {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, row[tdItem]);\n      });\n    };\n\n    this.state = {\n      rows1: [['Key', 'AAA', 'BBB', 'CCC', 'DDD', 'EEE', 'FFF', 'GGG'], ['COM', '0,0', '0,1', '0,2', '0,3', '0,4', '0,5', '0,6'], ['DIV', '1,0', '1,1', '1,2', '1,3', '1,4', '1,5', '1,6'], ['DEV', '2,0', '2,1', '2,2', '2,3', '2,4', '2,5', '2,6'], ['ACC', '3,0', '3,1', '3,2', '3,3', '3,4', '3,5', '3,6']],\n      rows: [['', 'specialHead', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', 'error', '', '', '', '', '', ''], ['', 'error changed', '', '', '', '', '', ''], ['', '', '', '', '', '', '', '']]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Upload, {\n      getFileData: this.getFileData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Upload\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"*****************\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.Rows(this.state.rows)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rajeshwarsingh/www/rajan/react/my-app/src/App.js"],"names":["React","useCallback","Upload","SpreadsheetComponent","config","rows","columns","canAddRow","emptyValueSymbol","App","Component","constructor","props","getFileData","data","console","log","setState","Rows","map","rowItem","i","Columns","row","Object","keys","tdItem","index","state","rows1","render"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Upload from './components/upload'\nimport SpreadsheetComponent  from 'react-spreadsheet-component'\n\nvar config = {\n    // // Initial number of row\n    rows: 5,\n    // // Initial number of columns\n    columns: 8,\n    // // True if the first column in each row is a header (th)\n    // hasHeadColumn: true,\n    // // True if the data for the first column is just a string.\n    // // Set to false if you want to pass custom DOM elements.\n    // isHeadColumnString: true,\n    // // True if the first row is a header (th)\n    // hasHeadRow: true,\n    // // True if the data for the cells in the first row contains strings.\n    // // Set to false if you want to pass custom DOM elements.\n    // isHeadRowString: true,\n    // // True if the user can add rows (by navigating down from the last row)\n    canAddRow: false,\n    // // True if the user can add columns (by navigating right from the last column)\n    // canAddColumn: true,\n    // // Override the display value for an empty cell\n    emptyValueSymbol: '*',\n    // // Fills the first column with index numbers (1...n) and the first row with index letters (A...ZZZ)\n    // hasLetterNumberHeads: true\n};\n\nclass  App extends React.Component{\n\n  constructor(props) {\n    super(props);\n       // Don't do this!\n       this.state = {\n           rows1: [\n               ['Key', 'AAA', 'BBB', 'CCC', 'DDD', 'EEE', 'FFF', 'GGG'],\n               ['COM', '0,0', '0,1', '0,2', '0,3', '0,4', '0,5', '0,6'],\n               ['DIV', '1,0', '1,1', '1,2', '1,3', '1,4', '1,5', '1,6'],\n               ['DEV', '2,0', '2,1', '2,2', '2,3', '2,4', '2,5', '2,6'],\n               ['ACC', '3,0', '3,1', '3,2', '3,3', '3,4', '3,5', '3,6']\n           ],\n           rows: [\n        ['', 'specialHead', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', ''],\n        ['', 'error', '', '', '', '', '', ''],\n        ['', 'error changed', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '']\n    ]\n       }\n      }\n\n      getFileData = (data) => {\n        console.log('df',data);\n        this.setState({rows: data})\n      }\n\n      Rows=(data)=>{\n        return data.map((rowItem,i)=>{\n          return (<tr key={i}>{this.Columns()}</tr>)\n        })\n      }\n\n      Columns =(row)=>{\n        return Object.keys(row).map((tdItem, index)=>{\n          return <td key={index}>{row[tdItem]}</td>\n      })\n\n    }\n\n  render(){\n\n    return (\n    <div className=\"App\">\n      <div><Upload getFileData={this.getFileData}>Upload</Upload></div>\n      <div>*****************</div>\n      <table>{this.Rows(this.state.rows)}</table>\n    </div>\n  )}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}